import{r as _,d as N,w as q,o as f,c as y,a as e,b as m,e as B,v as O,F as b,f as C,u as z,t as D,i as I,_ as L,j as R,k as P,l as W}from"./app.5c253a19.js";import{c as U,a as j,b as F}from"./chunks/board.9fbf0e45.js";const r={Empty:0,Stone:1,Goal:2};function T(p){return U(r,{width:p.width,height:p.height,outline:r.Stone,inside:r.Empty})}function J(){const p=_({x:0,y:0});function d(o){const{width:l,height:w}=o;p.value={x:l-2,y:w-1},o.cells[p.value.y][p.value.x]=r.Empty}return{position:p,placeOnBoard:d}}const K={key:0,style:{position:"absolute",transform:"translate(0%, -50%)","text-align":"center"}},X=N({__name:"SlidingPuzzle",setup(p){const d=_({width:10,height:10}),o=_(T(d.value)),l=J(),w=_([]);l.placeOnBoard(o.value),M(o.value),q(d,t=>{o.value=T(t),l.placeOnBoard(o.value),M(o.value)},{deep:!0});async function M(t){for(;!E(t);)await new Promise(n=>setTimeout(n,0))}function E(t){const{width:a,height:n}=t;let h=Math.floor(Math.random()*(a*n)/3);for(;h>0;){for(let u=0;u<2;u++){const s=j(t),i=Math.floor(Math.random()*(a-2))+1,k=Math.floor(Math.random()*(n-2))+1;s.cells[k][i]=r.Goal;for(let c=0;c<h;c++){const x=Math.floor(Math.random()*(a-2))+1,S=Math.floor(Math.random()*(n-2))+1;s.cells[S][x]===r.Empty?s.cells[S][x]=r.Stone:Math.random()>.5&&c--}const v=V(s);if(v!=null)return F(s,t),w.value=A(v),!0}h-=1}return console.log("Oh no, it failed. Retrying...?"),!1}function V(t){const a=new Set,n=i=>{a.add(`${i.x},${i.y}`)},h=i=>a.has(`${i.x},${i.y}`),u=[],s=[{x:-1,y:0},{x:1,y:0},{x:0,y:-1},{x:0,y:1}];for(n(l.position.value),s.forEach(i=>{u.push({position:l.position.value,direction:i,previous:null})});u.length>0;){const i=u.shift(),{position:k,direction:v}=i,c=g(k,v,t);if(t.cells[c.y][c.x]===r.Goal)return{position:c,direction:v,previous:i};h(c)||(n(c),s.forEach(x=>{u.push({position:c,direction:x,previous:i})}))}return null}function A(t){const a=[];let n=t;for(;n!=null;)a.push(n.position),n=n.previous;return a.reverse()}function g(t,a,n){const{width:h,height:u}=n;for(;;){const s={x:t.x+a.x,y:t.y+a.y};if(s.x<0||s.x>=h||s.y<0||s.y>=u||n.cells[s.y][s.x]===r.Stone)return t;t=s}}function $(t){return t===r.Empty?" ":t===r.Stone?"⛰":t===r.Goal?"🐟":"?"}function G(t){t.code=="ArrowUp"?(console.log("up"),l.position.value=g(l.position.value,{x:0,y:-1},o.value),t.preventDefault()):t.code=="ArrowDown"?(console.log("down"),l.position.value=g(l.position.value,{x:0,y:1},o.value),t.preventDefault()):t.code=="ArrowLeft"?(console.log("left"),l.position.value=g(l.position.value,{x:-1,y:0},o.value),t.preventDefault()):t.code=="ArrowRight"&&(console.log("right"),l.position.value=g(l.position.value,{x:1,y:0},o.value),t.preventDefault())}return(t,a)=>(f(),y(b,null,[e("div",null,[m(" Playing field size "),B(e("input",{type:"number",min:"3",max:"999",size:3,"onUpdate:modelValue":a[0]||(a[0]=n=>d.value.width=n)},null,512),[[O,d.value.width]]),m(" x "),B(e("input",{type:"number",min:"3",max:"999",size:3,"onUpdate:modelValue":a[1]||(a[1]=n=>d.value.height=n)},null,512),[[O,d.value.height]])]),e("table",{tabIndex:0,className:"game-table",onKeydown:a[2]||(a[2]=n=>G(n))},[e("tbody",null,[(f(!0),y(b,null,C(o.value.cells,(n,h)=>(f(),y("tr",null,[(f(!0),y(b,null,C(n,(u,s)=>(f(),y("td",null,[e("span",null,D($(u)),1),s==z(l).position.value.x&&h==z(l).position.value.y?(f(),y("span",K,"🐈")):I("",!0)]))),256))]))),256))])],32),e("div",null,[e("button",{onClick:a[3]||(a[3]=n=>z(l).placeOnBoard(o.value))},"Back to square 1")]),m(" Solution in an arcane language understood by computer-wizards: "),e("pre",null,D(w.value),1)],64))}});const Y=L(X,[["__scopeId","data-v-587b5072"]]),H=e("p",null,[m("A cute little sliding puzzle game. Given a board with a "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"n")]),e("annotation",{encoding:"application/x-tex"},"n")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.4306em"}}),e("span",{class:"mord mathnormal"},"n")])])]),m(" x "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"m")]),e("annotation",{encoding:"application/x-tex"},"m")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.4306em"}}),e("span",{class:"mord mathnormal"},"m")])])]),m(" size, we solve it by starting at the player 🐈. Then there are 4 possible directions (up, down, left, right). We try walking in those directions until we hit a rock. This gives us our potentially new solutions. So we add those to a queue and mark the field of the player as completed.")],-1),Q=e("p",null,"Then, unsurprisingly, we take a position out of the queue. We do this whole 'walk in 4 directions, check if visited and add to queue' again. And repeat.",-1),Z=e("p",null,[m("In the worst case, we visit every single tile once, before having marked everything as completed. So "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"O"),e("mo",{stretchy:"false"},"("),e("mi",null,"n"),e("mo",null,"⋅"),e("mi",null,"m"),e("mo",{stretchy:"false"},")")]),e("annotation",{encoding:"application/x-tex"},"O(n \\cdot m)")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),e("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),e("span",{class:"mopen"},"("),e("span",{class:"mord mathnormal"},"n"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"⋅"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),e("span",{class:"base"},[e("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),e("span",{class:"mord mathnormal"},"m"),e("span",{class:"mclose"},")")])])]),m(", which is nice and polynomial!")],-1),ee=e("p",null,"Verifying that this will always find a solution if one exists is left as an exercise for the reader. The author appreciates any and all proper proofs or decent explanations sent their way.",-1),te=e("p",null,"Click on the board to start playing.",-1),se=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Puzzles/sliding-puzzle.md"}'),ne={name:"Puzzles/sliding-puzzle.md"},oe=Object.assign(ne,{setup(p){return(d,o)=>{const l=R("ClientOnly");return f(),y("div",null,[H,Q,Z,ee,te,P(l,null,{default:W(()=>[P(Y)]),_:1})])}}});export{se as __pageData,oe as default};
